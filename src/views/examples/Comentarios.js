import React from 'react';
import { makeStyles } from '@material-ui/core/styles';
import CssBaseline from '@material-ui/core/CssBaseline';
import Paper from '@material-ui/core/Paper';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemAvatar from '@material-ui/core/ListItemAvatar';
import ListItemText from '@material-ui/core/ListItemText';
import Avatar from '@material-ui/core/Avatar';
import Imagen from '../../assets/img/avatar1.jpg'

const messages = [
	{
		id: 1,
		primary: 'Samuel Bustamante',
		secondary: "I'll be in the neighbourhood this week. Let's grab a bite to eat"
	},
	{
		id: 2,
		primary: 'Betania Velasquez',
		secondary: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`
	},
	{
		id: 3,
		primary: 'Enmanuel Bustamante',
		secondary: 'I am try out this new BBQ recipe, I think this might be amazing'
	},
	{
		id: 4,
		primary: 'Rizada Velasquez',
		secondary: 'I have the tickets to the ReactConf for this year.'
	},
	{
		id: 5,
		primary: "Benito Bustamante",
		secondary: 'My appointment for the doctor was rescheduled for next Saturday.'
	},
	{
		id: 6,
		primary: 'Jason Momoa',
		secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`
	},
	{
		id: 7,
		primary: 'The Joker',
		secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`
	},
];

const useStyles = makeStyles(theme => ({
	paper: {
		paddingBottom: 50,
		width: '100%'
	},
	list: {
		marginBottom: theme.spacing(2),
	},
}));

export default function Comentarios(props) {
	const [comentarioPost, setComentarioPost] = React.useState([]);
	const classes = useStyles();
	var id_post

	React.useEffect(() => {
		console.log(window.location)
		alert(props.dato)
		consultarComentarios()
		recibirId()
	}, []);

	const consultarComentarios = async () => {
		await fetch(`http://localhost:4000/comentarios?id_post=${id_post}`, {
			method: 'GET',
			headers: {
				"content-type": "application/json"
			}
		}).then(respuesta => {
			return respuesta.json()
		}).then(json => {
			setComentarioPost(json.respuesta)
		})
	}

	const recibirId = () => {
		id_post = window.location.search.split('=')[1];
	}

	return (
		<React.Fragment>
			<CssBaseline />
			<Paper square className={classes.paper}>
				<List className={classes.list}>
					{messages.map(({ id, primary, secondary }) => (
						<React.Fragment key={id}>
							<ListItem button>
								<ListItemAvatar>
									<Avatar alt="Profile Picture" src={Imagen} />
								</ListItemAvatar>
								<ListItemText primary={primary} secondary={secondary} />
							</ListItem>
						</React.Fragment>
					))}
				</List>
			</Paper>
		</React.Fragment>
	);
}